#!/usr/bin/make -f

# this is the env variable to tell us how many processors on this node
# we get
ifdef PBS_NUM_PPN
CORES=$(PBS_NUM_PPN)
else
CORES=8
endif

### module is how the biocluster loads specific versions; if we're not
### running there, we'll assume the correct version is installed and
### just echo what we're loading
ifdef MODULEPATH
MODULE=module
else
MODULE=echo
endif

BOWTIE_OPTIONS?=
BOWTIE_INDEX_DIR?=
LOCAL_BOWTIE_OPTIONS?= -N 1 -L 15 -k 10 --local
ALIGNMENT_SPECIES?=$(SPECIES)
REMOTE_FILES=$(FASTA).gz $(GTF).gz
ifdef USE_TRINITY
PROTEIN_ALIGNMENT_SPECIES?=$(ALIGNMENT_SPECIES)
PROTEIN_ALIGNMENT_FASTA?=$(patsubst %.dna.toplevel.fa,%.pep.all.fa,$(FASTA))
REMOTE_FILES:=$(REMOTE_FILES) $(PROTEIN_ALIGNMENT_FASTA)
endif

# we need to use a comma in a rule below, so this handles that
# escaping.
comma=,

call: $(SPECIES)_genes.fpkm_tracking

$(SPECIES)_genes.fpkm_tracking: $(SPECIES)_tophat_placenta.bam $(GTF)
	$(MODULE) load cufflinks/2.2.1; \
	cufflinks -p $(CORES) -G $(wordlist 2,2,$^) $<
	for file in genes.fpkm_tracking isoforms.fpkm_tracking skipped.gtf transcripts.gtf; do \
		mv $${file} $(SPECIES)_$${file}; \
	done;

call_local: local/$(SPECIES)_genes.fpkm_tracking

local/$(SPECIES)_genes.fpkm_tracking: $(SPECIES)_placenta_local.sorted.bam $(GTF)
	$(MODULE) load cufflinks/2.2.1; \
	cufflinks -o local -p $(CORES) -G $(wordlist 2,2,$^) $<
	for file in genes.fpkm_tracking isoforms.fpkm_tracking skipped.gtf transcripts.gtf; do \
		mv local/$${file} local/$(SPECIES)_$${file}; \
	done;

$(SPECIES)_placenta.sorted.bam: $(SPECIES)_placenta.bam
	$(MODULE) load samtools/1.0; \
	samtools sort $< -o $@ -T temp

$(SPECIES)_placenta_local.sorted.bam: $(SPECIES)_placenta_local.bam
	$(MODULE) load samtools/1.0; \
	samtools sort $< -o $@ -T temp

alignment: $(SPECIES)_tophat_placenta.bam

$(SPECIES)_placenta.bam:  \
	$(BOWTIE_INDEX_DIR)$(ALIGNMENT_SPECIES)_bt2.1.bt2 \
	$(FASTQ_FILES)
	$(MODULE) load bowtie2/2.1.0; \
	$(MODULE) load samtools/1.0; \
	bowtie2 -p $(CORES) -x $(patsubst %.1.bt2,%,$(wordlist 1,1,$^)) \
		$(if $(filter 2,$(words $(FASTQ_FILES))), \
			-1 $(wordlist 1,1,$(FASTQ_FILES)) -2 $(wordlist 2,2,$(FASTQ_FILES)),\
			-U $(FASTQ_FILES)) | \
		samtools view -b -o $@ -;

$(SPECIES)_tophat_placenta.bam: \
	$(BOWTIE_INDEX_DIR)$(ALIGNMENT_SPECIES)_bt2.1.bt2 \
	$(FASTQ_FILES) $(GTF) $(BOWTIE_INDEX_DIR)$(ALIGNMENT_SPECIES)_bt2.fa
	$(MODULE) load tophat2/2.0.10; \
	tophat -G $(GTF) -p $(CORES) \
		--transcriptome-index $(BOWTIE_INDEX_DIR)$(ALIGNMENT_SPECIES)_tophat_indexes \
		-o $(SPECIES)_tophat_placenta \
		$(patsubst %.1.bt2,%,$(wordlist 1,1,$^)) \
		$(FASTQ_FILES);
	ln $(SPECIES)_tophat_placenta/accepted_hits.bam $@ -s

local_alignment: $(SPECIES)_placenta_local.bam

$(SPECIES)_placenta_local.bam: \
	$(BOWTIE_INDEX_DIR)$(ALIGNMENT_SPECIES)_bt2.1.bt2 \
	$(FASTQ_FILES)
	$(MODULE) load bowtie2/2.1.0; \
	$(MODULE) load samtools/1.0; \
	bowtie2 -p $(CORES) $(LOCAL_BOWTIE_OPTIONS) \
		-x $(patsubst %.1.bt2,%,$(wordlist 1,1,$^)) \
		$(if $(filter 2,$(words $(FASTQ_FILES))), \
			-1 $(wordlist 1,1,$(FASTQ_FILES)) -2 $(wordlist 2,2,$(FASTQ_FILES)),\
			-U $(FASTQ_FILES)) | \
		samtools view -b -o $@ -;

ifdef USE_TRINITY
trinity: $(SPECIES)_trinity.Trinity.fasta

$(SPECIES)_trinity.Trinity.fasta: $(FASTQ_FILES)
	$(MODULE) load samtools/0.1.19; \
	$(MODULE) load trinityrnaseq/r2014-07-17; \
	Trinity --seqType fq \
	$(if $(filter 2,$(words $(FASTQ_FILES))), \
		--left $(wordlist 1,1,$(FASTQ_FILES)) --right $(wordlist 2,2,$(FASTQ_FILES)),\
		--single $(FASTQ_FILES)) \
		--CPU $(CORES) --trimmomatic --output $(SPECIES)_trinity --JM 10G;
	mv $(SPECIES)_trinity/Trinity.fasta $@

$(PROTEIN_ALIGNMENT_SPECIES)_diamond.dmnd: $(PROTEIN_ALIGNMENT_FASTA)
	$(MODULE) load diamond/0.7.9 ; \
	diamond makedb --in $(PROTEIN_ALIGNMENT_FASTA) --db $(PROTEIN_ALIGNMENT_SPECIES)_diamond;

$(SPECIES)_trinity_diamond.daa: $(SPECIES)_trinity.Trinity.fasta \
	$(PROTEIN_ALIGNMENT_SPECIES)_diamond.dmnd
	$(MODULE) load diamond/0.7.9 ; \
	diamond blastx --db $(PROTEIN_ALIGNMENT_SPECIES)_diamond \
		--query $(SPECIES)_trinity.Trinity.fasta \
        --daa $(SPECIES)_trinity_diamond

diamond: $(SPECIES)_trinity_diamond.txt

$(SPECIES)_trinity_diamond.txt: $(SPECIES)_trinity_diamond.daa
	$(MODULE) load diamond/0.7.9 ; \
	diamond view --daa $< > $@

$(PROTEIN_ALIGNMENT_FASTA).gz:
	rsync -avP "rsync://ftp.ensembl.org/ensembl/pub/release-80/fasta/$(PROTEIN_ALIGNMENT_SPECIES)/pep/$(PROTEIN_ALIGNMENT_FASTA).gz" $@

$(PROTEIN_ALIGNMENT_FASTA): $(PROTEIN_ALIGNMENT_FASTA).gz
	gzip -dc $< > $@


blastdb: $(PROTEIN_ALIGNMENT_SPECIES)_prot.phr

$(PROTEIN_ALIGNMENT_SPECIES)_prot.phr: $(PROTEIN_ALIGNMENT_FASTA)
	$(MODULE) load blast+ ; \
	makeblastdb -dbtype prot -title $(PROTEIN_ALIGNMENT_SPECIES) \
		-in $(PROTEIN_ALIGNMENT_FASTA) \
		-out $(PROTEIN_ALIGNMENT_SPECIES)_prot;


endif

bowtie_indexes: $(ALIGNMENT_SPECIES)_bt2.1.bt2

$(ALIGNMENT_SPECIES)_bt2.1.bt2: $(FASTA)
	$(MODULE) load bowtie2/2.1.0; \
	bowtie2-build $< $(ALIGNMENT_SPECIES)_bt2

$(BOWTIE_INDEX_DIR)$(ALIGNMENT_SPECIES)_bt2.fa: $(FASTA)
	rm -f $@
	ln $< $@

ifdef NOTENSEMBL
else
$(FASTA): $(FASTA).gz
	gzip -dc $< > $@

$(GTF): $(GTF).gz
	gzip -dc $< > $@

remote_files: $(REMOTE_FILES)

fasta: $(FASTA)

gtf: $(GTF)

$(FASTA).gz:
	rsync -avP "rsync://ftp.ensembl.org/ensembl/pub/release-80/fasta/$(ALIGNMENT_SPECIES)/dna/$(FASTA).gz" $@

$(GTF).gz:
	rsync -avP "rsync://ftp.ensembl.org/ensembl/pub/release-80/gtf/$(ALIGNMENT_SPECIES)/$(GTF).gz" $@
endif
