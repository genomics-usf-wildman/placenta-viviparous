\documentclass[english,12pt]{article}
\usepackage{fontspec}
\setmainfont{FreeSerif}
\setsansfont{FreeSans}
\setmonofont{FreeMono}
\usepackage[letterpaper,left=1in,right=1in,top=1in,bottom=1in,headheight=15pt]{geometry}
\usepackage{url}
\usepackage{fancyhdr}
\usepackage{graphicx}
\usepackage[bf]{caption}
\usepackage{rotating}
\usepackage{wrapfig}
\usepackage{amsmath}
\usepackage{booktabs}
\usepackage{float}
\usepackage{multirow}
\usepackage{multicol}
\usepackage{setspace}
\usepackage{wrapfig}
% \usepackage{txfonts}
\usepackage[macros=false]{acro}
\usepackage{array}
\usepackage{dcolumn}
\usepackage{adjustbox}
\usepackage{longtable}
\usepackage{pdflscape}
\usepackage[backend=biber,natbib=true,hyperref=true,style=nature,citestyle=numeric-comp,autocite=inline]{biblatex}
\addbibresource{references.bib}
\usepackage[noblocks,auth-sc]{authblk}
\usepackage[hyperfigures,bookmarks,colorlinks,linkcolor=black,urlcolor=blue,citecolor=blue]{hyperref}
%\usepackage[hyperfigures,bookmarks,colorlinks,citecolor=black,filecolor=black,linkcolor=black,urlcolor=black]{hyperref}
% Floats at end for journals
% \usepackage[nolists,figuresfirst,nomarkers,heads,nofighead,notabhead]{endfloat}
% \AtBeginFigures{\section*{Figure Legends}\renewcommand{\efloatseparator}{\hbox{}}}
% \AtBeginTables{\section*{Tables}\renewcommand{\efloatseparator}{\mbox{}}}
\usepackage{float}
\floatstyle{plaintop}
\restylefloat{table}
\usepackage[nomargin,inline,draft]{fixme}
\newcommand{\DLA}[1]{\textcolor{red}{\fxnote{DLA: #1}}}
\usepackage[x11names,svgnames]{xcolor}
\usepackage{texshade}
\usepackage{tikz}
\usepackage{nameref}
\usepackage{zref-xr,zref-user}
\usepackage{cleveref}
\usepackage{xspace}
% \usepackage[below]{placeins}
% \makeatletter
% \AtBeginDocument{%
%   \expandafter\renewcommand\expandafter\subsection\expandafter
%     {\expandafter\@fb@secFB\subsection}%
%   \newcommand\@fb@secFB{\FloatBarrier
%     \gdef\@fb@afterHHook{\@fb@topbarrier \gdef\@fb@afterHHook{}}}%
%   \g@addto@macro\@afterheading{\@fb@afterHHook}%
%   \gdef\@fb@afterHHook{}%
% }
% \makeatother
\def\newblock{\hskip}
\newenvironment{paperquote}{%
  \begin{quote}%
     \it
  }%
  {\end{quote}}
\renewcommand{\textfraction}{0.15}
\renewcommand{\topfraction}{0.85}
\renewcommand{\bottomfraction}{0.65}
\renewcommand{\floatpagefraction}{0.60}
%\renewcommand{\baselinestretch}{1.8}
\newenvironment{enumerate*}%
  {\begin{enumerate}%
    \setlength{\itemsep}{0pt}%
    \setlength{\parskip}{0pt}}%
  {\end{enumerate}}
\newenvironment{itemize*}%
  {\begin{itemize}%
    \setlength{\itemsep}{0pt}%
    \setlength{\parskip}{0pt}}%
  {\end{itemize}}
\oddsidemargin 0.0in 
\textwidth 6.5in
\raggedbottom
\clubpenalty = 10000
\widowpenalty = 10000
% make the afill smaller
\renewcommand\Affilfont{\itshape\small}
\renewcommand\cite[1]{\autocite{#1}}
\pagestyle{fancy}

\input{common_latex}

\begin{document}

\makeatletter 
\renewcommand{\thefigure}{S\@arabic\c@figure} 
\makeatother

\makeatletter 
\renewcommand{\thetable}{S\@arabic\c@table} 
\makeatother

\title{Supplemental Material for: The evolution of gene expression in the term placenta of viviparous mammals}

% \maketitle

\listoftables

\listoffigures


<<load.libraries,echo=FALSE,results="hide",warning=FALSE,message=FALSE,error=FALSE,cache=FALSE>>=
opts_chunk$set(dev="cairo_pdf",out.width="\\textwidth",out.height="0.6\\textheight",out.extra="keepaspectratio")
opts_chunk$set(cache=TRUE, autodep=TRUE,cache.path="supplemental_cache/")
opts_chunk$set(fig.path="supplemental_figure/")
options(device = function(file, width = 8, height = 7, ...) {
  cairo_pdf(tempfile(), width = width, height = height, ...)
})
options(scipen = -2, digits = 2)
library("data.table")
library("ggplot2")
library("reshape2")
library("xtable")
library("grid")
library("scales")
library("gridExtra")
library("ape")
library("ggtree")
library("RSQLite")
library("topGO")
library("org.Hs.eg.db")
library("magrittr")
library("tidyr")

@ 

<<source.to.latex,echo=FALSE,message=FALSE,results="hide",cache.extra=tools::md5sum(paste0("../common_r_code/",c("to_latex.R","plot_tree_matrix.R","utility_functions.R","plot_ancestral_state_tree.R")))>>=
for (a in paste0("../common_r_code/",c("to_latex.R","plot_tree_matrix.R",
                                       "utility_functions.R",
                                       "plot_ancestral_state_tree.R"))) {
    source(a)
}
@ 

<<load.data,echo=FALSE,results="hide",cache.extra=tools::md5sum(paste0("../data/",c("combined_fpkm","gene_trees","housekeeping_genes_superset","placenta_core_transcriptome","hugo_nomenclature","gene_annotation")))>>=
for (a in paste0("../data/",c("combined_fpkm","gene_trees",
                              "housekeeping_genes_superset",
                              "placenta_core_transcriptome",
                              "hugo_nomenclature",
                              "gene_annotation"
                              ))) {
    load(a)
}
combined.fpkm[,species:=factor(species,levels=names(species.names))]
setkey(genes.to.tree,"gene_id")
star.logs[,value:=gsub("%$","",value)]
star.logs.wide <- 
    data.table(dcast(star.logs,species+file~field))
setnames(star.logs.wide,
         "Average input read length",
         "input.read.length")
setnames(star.logs.wide,
         "Number of input reads",
         "input.reads")
setnames(star.logs.wide,
         "Uniquely mapped reads number",
         "unique.map.reads")
setkey(hugo.nomenclature,"Approved Symbol")
@ 

<<load.go.results,echo=FALSE,results="hide",cache.extra=tools::md5sum("../go_annotation/go_tissue_analysis")>>=
load("../go_annotation/go_tissue_analysis")

@ 

\clearpage

\section{Species}

\subsection{Placental Classification}

<<placental_classification,echo=FALSE,results="hide",cache.extra=file.info(dir("../data","placenta.*classification.*",full.names=TRUE))[,"mtime"]>>=
load("../data/placenta_classification")
load("../data/placenta_classification_p")
for (mf.bp in c("mf","bp")) {
    for (class in c("interdigitation","intimacy","shape")) {
        load(paste0("../data/placenta_classification_go_",mf.bp,"_",class))
    }
}

@ 

\begin{table}[hb]
<<placental_classification_table,echo=FALSE,results="asis">>=
plac.class <- copy(placenta_classification[,list(species,shape,interdigitation,intimacy)])
plac.class[,`species`:=paste0("\\textit{",gsub("^(.)","\\U\\1",`species`,perl=TRUE),"}")]
plac.class[,`interdigitation`:=gsub("^(.)","\\U\\1",`interdigitation`,perl=TRUE)]
plac.class[,`shape`:=gsub("^(.)","\\U\\1",`shape`,perl=TRUE)]
plac.class[,`intimacy`:=gsub("^(.)","\\U\\1",`intimacy`,perl=TRUE)]
setnames(plac.class,colnames(plac.class),gsub("^(.)","\\U\\1",colnames(plac.class),perl=TRUE))

print(xtable(plac.class,
             display=c("s","s","s","s","s"),
             align=c("c","c","c","c","c")),
      include.rownames=FALSE,
      floating=FALSE,
      sanitize.text.function=genes.table.sanitize,
      booktabs=TRUE
      )

@ 
\caption{Classification of Placenta shapes}
\label{tab:placental_classification}
\end{table}

\clearpage

\begin{table}
  \small
  \begin{tabular}{>{\raggedright }p{0.7in}
                  >{\raggedright }p{0.7in}
                  c c 
                  p{0.65in}}
    \toprule
    {\centering Species  }                     & {\centering Common Name }& 
       \multicolumn{1}{p{0.43in}}{\raggedright \centering Gestation (days)} & 
       \multicolumn{1}{p{0.3in}}{\raggedright \centering Litter Size}  & Source \\
    \midrule
    \textit{Ateles fusciceps}     & Spider monkey & 224 & 1 & \citet{Ernest2003:lifehistorycharacteristicsofplacental}\\
    \textit{Bos taurus}           & Cow & 278 & 1 & \citet{Kiltie1982:intraspecificvariationmammaliangestation} \\
    \textit{Canis familiaris}     & Dog & 61 & 4 & \citet{Kiltie1982:intraspecificvariationmammaliangestation} \\
    \textit{Dasypus novemcinctus} & Nine-banded Armadillo & 150 & 4 & \citet{Smith1984:amazingarmadillo} \\
    \textit{Equus caballus}       & Horse & 336 & 1 & \citet{Kiltie1982:intraspecificvariationmammaliangestation}\\
    \textit{Loxodonta africana}   & African savanna elephant & 644 & 1 & \citet{Ernest2003:lifehistorycharacteristicsofplacental}\\
    \textit{Homo sapiens}         & Human & 270 & 1.1 & \citet{Kiltie1982:intraspecificvariationmammaliangestation} \\
    \textit{Monodelphis domestica}& Gray short-tailed opossum & 15 & 7.1 & \citet{Harder.ea1993:Gestationandplacentationin} \\
    \textit{Mus musculus}         & Mouse & 20 & 6.1 & \citet{Kiltie1982:intraspecificvariationmammaliangestation} \\
    \textit{Spalax galili}   & Blind mole rat from Upper Galilee & 28-42 & 4 & \citet{Nevo1997:mosiacevolutionofsubterranianmammals} \\
    \textit{Ovis aries}           & Domestic sheep & 151 & 1.35 & \citet{Kiltie1982:intraspecificvariationmammaliangestation} \\
    \textit{Pan paniscus}         & Bonobo & 223 & 1 & \citet{Ernest2003:lifehistorycharacteristicsofplacental} \\
    \textit{Spalax carmeli}       & Blind mole rat from northern Israel & 28-42 & 4 & \citet{Nevo1997:mosiacevolutionofsubterranianmammals}\\
    \textit{Sus scrofa}           & Domestic pig (Duroc) & 114 & 5.8 & \citet{Kiltie1982:intraspecificvariationmammaliangestation} \\
    \bottomrule
  \end{tabular}
  \caption{Gestational periods in days and average liter sizes for studied species.}
  \label{tab:gestational_periods}
\end{table}


\clearpage

\subsection{Sequence Source}

\begin{table}
  \raggedright
  \small
  \begin{tabular}{c >{\raggedright}p{1.2in} c >{\raggedright\arraybackslash}p{1.8in} c}
    \toprule
    Species                       & Collector & Experiment & Sample(s) & Library \\
    \midrule
    \textit{Ateles fusciceps}     & Kurt Benirschke & GSE79121 & SRX1629201 & Total\\
    \textit{Bos taurus}           & Bob Kreft & GSE79121 & SRX1629203 & Total \\
    \textit{Canis familiaris}     & Dalen Agnew & GSE79121 & SRX1629204 & Total \\
    \textit{Dasypus novemcinctus} & Richard Truman, Vincent J. Lynch& GSE79121 & SRX1629200 & Total\\
    \textit{Equus caballus}       & \citet{Coleman.ea2010:Structuralannotationofequine} & GSM1139275 & SRR850299,  SRR850300 & mRNA \\
    \textit{Loxodonta africana}   & Kurt Benirschke & GSE79121 & SRX1629205 & Total \\
    \textit{Homo sapiens}         & \citet{Hughes.ea2015:Evaluatingintra-andinter-individual} & GSE66622 
                                             & SRR1850945,
                                               SRR1850946, 
                                               SRR1850951, 
                                               SRR1850952, 
                                               SRR1850953, 
                                               SRR1850954, 
                                               SRR1850957, 
                                               SRR1850958, 
                                               SRR1850965, 
                                               SRR1850966, 
                                               SRR1850975, 
                                               SRR1850976, 
                                               SRR1850983, 
                                               SRR1850984, 
                                               SRR1850987, 
                                               SRR1850988, 
                                               SRR1850991, 
                                               SRR1850992, 
                                               SRR1850993, 
                                               SRR1850994, 
                                               SRR1850995, 
                                               SRR1850996, 
                                               SRR1851003, 
                                               SRR1851004, 
                                               SRR1851011, 
                                               SRR1851012  & mRNA \\
    \textit{Monodelphis domestica} & Karen Smith, Gunter Wagner & GSE79121 & SRX1629207 & Total \\
    \textit{Mus musculus}         & \citet{Wang.ea2011:surveyfornovelimprinted} & GSE29690 
                                     & SRR243594, 
                                       SRR243595, 
                                       SRR243596, 
                                       SRR243597, 
                                       SRR243598, 
                                       SRR243599, 
                                       SRR243600, 
                                       SRR243601, 
                                       SRR243602, 
                                       SRR243586, 
                                       SRR243587, 
                                       SRR243588, 
                                       SRR243589, 
                                       SRR243590, 
                                       SRR243591, 
                                       SRR243592, 
                                       SRR243593 & mRNA \\
    \textit{Ovis aries}           & \citet{Archibald.ea2010:sheepgenomereferencesequence} & ERP005642 & ERR489144, ERR489145 & Total \\
    \textit{Pan paniscus}         & William Mintz Fields & GSE79121 & SRX1629202 & Total\\
    \textit{Spalax carmeli}       & Anne Dupressoir, Eviator Nevo & GSE68763 & SRR2016467 & Total\\
    \textit{Spalax galili}        & Eviator Nevo                  & GSE68763 & SRR2016466 & Total\\
    \textit{Sus scrofa}           & \citet{Ahanda.ea2012:Predictionofaltered3-} &  SRP014902 & SRR543893 & mRNA \\
    \bottomrule
  \end{tabular}
  \caption{Species, experiment and species numbers used in the analyses presented in this paper. 
    The Library column indicates the type of RNA selection performed: Total indicates rRNA depletion; 
    mRNA indicates poly-A selection.}
  \label{tab:srr_numbers}
\end{table}

\clearpage

\subsection{Species Alignment}

\begin{table}[hb]
  \centering
  \begin{tabular}{c c c c}
    \toprule
    Species                       & Common Name        & Reference & Read Length \\
    \midrule
    \textit{Ateles fusciceps}     & Spider monkey      & \textit{Homo sapiens} & 100 \\
    \textit{Bos taurus}           & Cow                & UMD3.1     & 75 \\
    \textit{Canis familiaris}     & Dog                & CanFam3.1  & 150 \\
    \textit{Dasypus novemcinctus} & Nine-Banded Armadillo & DASNOV3    & 100 \\
    \textit{Equus caballus}       & Horse              & EquCab2    & 100 \\ 
    \textit{Loxodonta africana}   & African savanna elephant           & loxAfr3    & 75 \\
    \textit{Homo sapiens}         & Human              & GRCh38     & 75, 150 \\
    \textit{Monodelphis domestica} & Gray short-tailed opossum           & BROAD05    & 75 \\
    \textit{Mus musculus}         & Mouse              & GRCm38     & 35,44,150 \\
    \textit{Ovis aries}           & Sheep              & Oar\_v3.1   & 151 \\
    \textit{Pan paniscus}         & Bonobo             & CHIMP2.1.4 & 150 \\
    \textit{Spalax carmeli}       & Blind mole rat from Upper Galilee    & \textit{Mus musculus} & 100 \\
    \textit{Spalax galili}   & Blind mole rat from Northern Israel    & \textit{Mus musculus} & 100 \\
    \textit{Sus scrofa}           & Domestic pig (Duroc)        & Sscrofa10.2 & 51 \\
    \bottomrule
  \end{tabular}
  \caption{Species names, common names, reference genomes and read 
    lengths for aligned species. An italic species as a reference 
    indicates that assembled reads were annotated using the corresponding
    reference genome as explained in the text.}
  \label{tab:ref_genome_aligned_species}
\end{table}

\clearpage

\section{Transcriptome statistics}



\begin{figure}[hb]
<<transcriptome.mapping.figure,fig.width=8,fig.height=8,echo=FALSE>>=
star.logs.unmapped <- 
    star.logs[grepl("%",field) & 
                  grepl("unmapped|too many loci",field) & 
                      !grepl("too many mismatches",field),]
star.logs.unmapped <- 
    star.logs.unmapped[,field:=capfirst(gsub("\\% of reads (unmapped:|mapped to) ","",field))]
pushViewport(viewport(layout=grid.layout(ncol=1,nrow=2,heights=c(2,1))))
print(ggplot(star.logs.unmapped,
             aes(x=capfirst(species),y=as.numeric(gsub("%","",value))))
      + geom_boxplot()
      + facet_grid(field~.,scales="free")
      + ylab("Percentage of Reads Unmapped")
      + xlab(NULL)
      + theme_bw()
      + theme(legend.position="top",
              plot.margin=unit(c(0,0,0,1.1),"strwidth",data=list("","","","e8")),
              axis.title.x=element_blank(),
              axis.text.x = element_blank()),#element_text(angle = 30, hjust = 1, vjust=1,face="italic")),
      vp=viewport(layout.pos.col=1,layout.pos.row=1)
      )
pushViewport(viewport(layout.pos.col=1,layout.pos.row=1))
grid.text("A",
          y=unit(1,"npc")-unit(0.1,"cm"),
          x=unit(0,"npc")+unit(0.1,"cm"),
          gp=gpar(fontsize=24),
          just=c("left","top"))
popViewport()          
print(ggplot(star.logs[grepl("input reads$",field),],
             aes(x=capfirst(species),y=as.numeric(value)))
      + geom_boxplot()
      + scale_y_log10()
      + ylab("Reads")
      + xlab("Species")
      + theme_bw()
      + theme(legend.position="top",
              plot.margin=unit(c(0,1.6,0,0),"strheight",data=list("","TO","","")),
              axis.text.x = element_text(angle = 30, hjust = 1, vjust=1,face="italic")),
      vp=viewport(layout.pos.col=1,layout.pos.row=2))
pushViewport(viewport(layout.pos.col=1,layout.pos.row=2))
grid.text("B",
          y=unit(1,"npc")-unit(0.1,"cm"),
          x=unit(0,"npc")+unit(0.1,"cm"),
          gp=gpar(fontsize=24),
          just=c("left","top"))
popViewport(2)
@ 
\caption[RNAseq statistics]{RNAseq read and alignment statistics for all species. A)
  Boxplot of percentages of unmapped reads in each species; 0\% of
  reads in all species were unmapped because of mismatches. B) Boxplot
  of number of RNAseq reads in each species.}
\label{fig:transcriptome_statistics}
\end{figure}


\begin{figure}
<<reads.vs.read.length,fig.width=8,fig.height=6,echo=FALSE>>=
grid::pushViewport(grid::viewport(layout=grid::grid.layout(ncol=2,nrow=1,widths=c(1,1.4))))
print(ggplot(star.logs.wide,
             aes(x=as.numeric(input.read.length),
                 y=as.numeric(input.reads),
                 color=capfirst(species),
                 shape=capfirst(species)
                 ))
      + scale_shape_manual(values=1:nlevels(as.factor(star.logs.wide[,species])),
                           guide=guide_legend(title="Species")
                           )
      + scale_color_discrete(guide=guide_legend(title="Species")
                             )
      + geom_point(size=5)
      + xlab("Trimmed Read Length")
      + ylab("Number of input reads")
      + scale_y_log10()
      + theme(legend.position="none"
              ),
      vp=grid::viewport(layout.pos.row=1,layout.pos.col=1)
      )
print(ggplot(star.logs.wide,
             aes(x=as.numeric(input.read.length),
                 y=as.numeric(`% of reads unmapped: too short`)#,
                 # color=capfirst(species),
                 # shape=capfirst(species)
                 ))
      + scale_shape_manual(values=1:nlevels(as.factor(star.logs.wide[,species])),
                           guide=guide_legend(title="Species")
                           )
      + scale_color_discrete(guide=guide_legend(title="Species")
                             )
      + geom_point(aes(color=capfirst(species),shape=capfirst(species)),size=5)
      + stat_smooth(method="lm")
      + xlab("Trimmed Read Length")
      + ylab("Unmapped Too Short %")
      + theme(legend.text=element_text(face="italic"),
              legend.position="right"
              ),
            vp=grid::viewport(layout.pos.row=1,layout.pos.col=2)
      )
grid::popViewport()
@ 
\caption{RNA Read number as a function of trimmed read length}
\label{fig:transcriptome_reads_vs_read_length}
\end{figure}


\clearpage

\section{Species Expression}

<<genes.expression,echo=FALSE,results="hide">>=
genes.expression.table <- function(species.name,min.fpkm=50) {
    alignment.species <- species.name
    if (alignment.species=="pan paniscus") {
        alignment.species <- "pan troglodytes"
    } else if (alignment.species=="ateles fusciceps") {
        alignment.species <- "homo sapiens"
    } else if (grepl("spalax",alignment.species)) {
        alignment.species <- "mus musculus"
    }

    temp <- 
        combined.fpkm[species==species.name
                      ][order(-mean_fpkm)
                        ][,list(name_or_id,
                                human_alignment_symbol,
                                human_name,mean_fpkm)]
    temp <- temp[!duplicated(name_or_id)][mean_fpkm>=min.fpkm]
    temp[,used_alignment:=FALSE]
    temp[is.na(human_name) & !is.na(human_alignment_symbol),
         used_alignment:=TRUE]
    temp[is.na(human_name),human_name:=human_alignment_symbol]
    setkey(temp,"human_name")
    temp <- 
        hugo.nomenclature[temp][order(-mean_fpkm),
                                list(name_or_id,used_alignment,`Approved Symbol`,`Approved Name`,mean_fpkm)]
    temp[!is.na(name_or_id),
         name_or_id:=paste0("\\href{http://www.ensembl.org/",
                            capfirst(gsub(" ","_",alignment.species)),
                            "/Gene/Summary?g=",name_or_id,"}{",
                            xtable.sanitize.text(name_or_id),"}")]
    temp[!is.na(`Approved Name`),
         `Approved Name`:=paste0("\\href{http://www.ensembl.org/Homo_sapiens/Gene/Summary?g=",`Approved Symbol`,"}{",xtable.sanitize.text(`Approved Name`),"}")]
    temp[!is.na(`Approved Symbol`),
         `Approved Symbol`:=paste0("\\href{http://www.ensembl.org/Homo_sapiens/Gene/Summary?g=",`Approved Symbol`,"}{",xtable.sanitize.text(`Approved Symbol`),"}")]
    temp[used_alignment==TRUE,`Approved Symbol`:=paste0("(",`Approved Symbol`,")")]
    temp[,used_alignment:=NULL]
    setnames(temp,c("Gene symbol","Human Symbol","Human Name","FPKM"))
    if (species.name=="homo sapiens" || species.name=="ateles fusciceps") {
        temp[,`Human Symbol`:=NULL]
    }
    return(temp)
}
@ 

<<top.expressed.genes,echo=FALSE,results="asis">>=
for (this.species in names(species.names)) {
    this.caption <- paste0("\\textit{",
                           capfirst(this.species),"} Placental Gene Expression of all genes with FPKM $\\ge 50$")
    cat(paste0("\\subsection{\\textit{",capfirst(this.species),"} Placental Gene Expression}\n\n"))
    xt.align <- c("r","l","l","p{2.5in}","r")
    if (this.species == "homo sapiens" || this.species == "ateles fusciceps") {
        xt.align <- xt.align[-2]
    }
    print(xtable(genes.expression.table(species.name=this.species),
                 caption=this.caption,
                 align=xt.align,
                 label=paste0("tab:all_",gsub(" ","_",this.species),"_placenta")
                 ),
          booktabs=TRUE,
          tabular.environment="longtable",
          floating=FALSE,
          caption.placement="top",
          sanitize.text.function=genes.table.sanitize,
          size="\\tiny"
          )
    cat("\\clearpage\n")
}
@ 

\section{Per-Species GSEA}

\subsection{Top 1\% Transcripts Enrichment}

<<go.analysis.top.5p.all.species,echo=FALSE,results="asis">>=
for (this.species in names(species.names)) {
    cat(paste0("\\subsubsection{Significantly enriched ($\\text{FDR}\\le0.05$) GO terms in ",
                           " the top 1\\% of \\textit{",
                           capfirst(this.species),"} expressed transcripts}\n\n"))
    this.caption <- paste0("Significantly enriched ($\\text{FDR}\\le0.05$) GO terms in ",
                           " the top 1\\% of \\textit{",
                           capfirst(this.species),"} expressed transcripts.")
    print(xtable(go.results[grepl("Top 1% No Housekeeping",type) & FDR <= 0.05 & species == this.species,
                            list(GO.ID,Term,FDR,Ontology)
                            ][order(FDR)],
                 caption=c(this.caption,paste0("GO terms from \\textit{",
                                               capfirst(this.species),"} top 1\\%")),
                 label=paste0("tab:go_terms_enriched_top_one_",gsub(" ","_",this.species)),
                 display=c("s","s","s","e","s")
                 ),
          size="\\small",
          booktabs=TRUE, 
          math.style.exponents=TRUE,
          include.rownames=FALSE,
          tabular.environment="longtable",
          caption.placement="top",
          floating=FALSE)
}
@ 

\clearpage


\subsection{Top 100 Transcripts Enrichment}

<<go.analysis.all.species,echo=FALSE,results="asis">>=
for (this.species in names(species.names)) {
    cat(paste0("\\subsubsection{Significantly enriched ($\\text{FDR}\\le0.05$) GO terms in ",
                           " the top 100 \\textit{",
                           capfirst(this.species),"} expressed transcripts}\n\n"))
    this.caption <- paste0("Significantly enriched ($\\text{FDR}\\le0.05$) GO terms in ",
                           " the top 100 \\textit{",capfirst(this.species),"} expressed transcripts")
    this.label <- paste0("tab:go_terms_enriched_",gsub(" ","_",this.species))
    print(xtable(go.results[grepl("100 No Housekeeping",type) & FDR <= 0.05 & species == this.species,
                            list(GO.ID,Term,FDR,Ontology)
                            ][order(FDR)],
                 caption=c(this.caption,paste0("GO terms from \\textit{",
                                               capfirst(this.species),"} top 100")),
                 label=this.label,
                 display=c("s","s","s","e","s")
                 ),
          size="\\small",
          booktabs=TRUE,
          math.style.exponents=TRUE,
          include.rownames=FALSE,
          tabular.environment="longtable",
          caption.placement="top",
          floating=FALSE)
}
@ 

\clearpage

\subsection{Common Species Terms}

<<go.analysis.all.tissue,echo=FALSE,results="asis">>=
go.analysis.wide <- 
    data.table(dcast(data=go.results,
                     formula=GO.ID+type+Term+Ontology~species,
                     value.var="FDR"))
go.analysis.wide <- 
    go.analysis.wide[,`n(FDR ≤ 0.05)`:=apply(go.analysis.wide[,-(1:4),with=FALSE],1,
                                         function(x){sum(as.numeric(as.character(x)) <= 0.05)})]
go.analysis.wide <- 
    go.analysis.wide[,`max(FDR ≤ 0.05)`:=apply(go.analysis.wide[,-(1:4),with=FALSE],1,
                                           function(x){if (!any(is.finite(x) & x<=0.05)) {
                                                           return(NA)
                                                       } else {
                                                           max(x[is.finite(x) & x<=0.05],na.rm=TRUE)
                                                       }})]
go.analysis.wide.table <- 
    go.analysis.wide[!is.na(`n(FDR ≤ 0.05)`) & `n(FDR ≤ 0.05)` >= 12 &
                         grepl("Top 1% No Housekeeping",type),
                     list(GO.ID,Term,Ontology,`n(FDR ≤ 0.05)`,`max(FDR ≤ 0.05)`)]
go.analysis.wide.table <- 
    go.analysis.wide.table[order(Ontology,-`n(FDR ≤ 0.05)`,`max(FDR ≤ 0.05)`)]
setnames(go.analysis.wide.table,"GO.ID","GO ID")

print(xtable(go.analysis.wide.table,
             display=c("d","s","s","s","d","e"),
             align=  c("c","c","c","c","c","c"),
             caption=c("GO terms with significant enrichment ($\\text{FDR}\\le0.05$)
  in 12 or more of the species analyzed from genes in the top 1\\% of
  expression. $n(\\text{FDR}\\le0.05)$ is the number of species with
  significant enrichment ($\\text{FDR}\\le 0.05$) in the GO term
  listed. $max(\\text{FDR}\\le0.05)$ is the maximum FDR value in all
  species with an FDR of less than $0.05$.","GO terms in 12 or more species"),
  label="tab:go_terms_all_species"
  ),
  math.style.exponents=TRUE,
  include.rownames=FALSE,
  booktabs=TRUE,
  floating=FALSE,
  tabular.environment="longtable",
  caption.placement="top",
  size="\\footnotesize"
  )

@ 

\clearpage



\section{Gene Evolution Trees}

\subsection{Pre-eclampsia genes}

\begin{figure}[hb]
<<crh.evolution.tree,echo=FALSE,out.height="0.6\\textheight",fig.width=8,fig.height=8,warning=FALSE,message=FALSE>>=

print(plot.ancestral.state.tree(gene_selector=quote(gene_short_name=="CRH" &
                                                    species=="homo sapiens"),
                                genes.to.tree=genes.to.tree,
                                combined.fpkm=combined.fpkm,
                                trees=trees
                                )+
      geom_tiplab(size=6,color="black",fontface="italic")+xlim(0,0.37))
@ 
\caption[Gene tree of \textit{CRH} Expression]{\genetreeexplanation{\textit{CRH}}}
\label{fig:crh_evolution_tree}
\end{figure}

\clearpage

\begin{figure}
<<kiss1.evolution.tree,echo=FALSE,fig.width=8,fig.height=8,warning=FALSE,message=FALSE>>=

print(plot.ancestral.state.tree(gene_selector=quote(gene_short_name=="KISS1"
                                                    & species=="homo sapiens"),
                                genes.to.tree=genes.to.tree,
                                combined.fpkm=combined.fpkm,
                                trees=trees
                                )+
      geom_tiplab(size=6,color="black",fontface="italic")+xlim(0,0.7))
@ 
\caption[Gene tree of \textit{KISS1} Expression]{\genetreeexplanation[0.1]{\textit{KISS1}}}
\label{fig:kiss1_evolution_tree}
\end{figure}

\begin{figure}
<<pappa.evolution.tree,echo=FALSE,fig.width=8,fig.height=8,warning=FALSE,message=FALSE>>=

print(plot.ancestral.state.tree(gene_selector=quote(gene_short_name=="PAPPA"
                                                    & species=="homo sapiens"),
                                subtree=c("ENSSSCG00000005498","ENSG00000182752"),
                                genes.to.tree=genes.to.tree,
                                combined.fpkm=combined.fpkm,
                                trees=trees
                                )+
      geom_tiplab(size=6,color="black",fontface="italic")+xlim(0,0.15))
@ 
\caption[Gene tree of \textit{PAPPA} Expression]{\genetreeexplanation[0.1]{\textit{PAPPA}}}
\label{fig:pappa_evolution_tree}
\end{figure}

\begin{figure}[hb]
<<adam12.evolution.tree,echo=FALSE,out.height="0.6\\textheight",fig.width=8,fig.height=8,warning=FALSE,message=FALSE>>=

print(plot.ancestral.state.tree(gene_selector=quote(gene_short_name=="ADAM12" &
                                                    species=="homo sapiens"),
                                genes.to.tree=genes.to.tree,
                                subtree=c("ENSMODG00000010538","ENSSSCG00000010746"),
                                combined.fpkm=combined.fpkm,
                                trees=trees
                                )+
      geom_tiplab(size=6,color="black",fontface="italic")+xlim(0,0.25))
@ 
\caption[Gene tree of \textit{ADAM12} Expression]{\genetreeexplanation{\textit{ADAM12}}}
\label{fig:adam12_evolution_tree}
\end{figure}

\clearpage

\section{Clade specific Expression}

<<load.placenta.lineage.specific,echo=FALSE,results="hide",cache.extra=tools::md5sum(paste0("../data/",c("placenta_lineage_specific")))>>=
load("../data/placenta_lineage_specific")
load("../data/human_mouse_lineage_specific")
source("/home/don/projects/xtable/pkg/R/print.xtable.R")

placenta.lineage.specific.table <- function(analysis,output=TRUE,lineage.table=placenta.lineage.specific.analysis,members=40,orderbyfc=FALSE,fdr.cutoff=1,caption=NULL,label=NULL) {
    temp.table <- 
        lineage.table[analysis.name==analysis &
                      p.value <= 0.05 &
                      fdr <= fdr.cutoff][order(p.value),
                                       list(human_name,p.value,fdr,fc),]
    temp.table <- data.table(temp.table)
    setkey(temp.table,"human_name")
    temp.table <- 
        hugo.nomenclature[temp.table][,list(`Approved Symbol`,
                                            `Approved Name`,p.value,fdr,fc)]
    setnames(temp.table,
              c("Human Symbol","Human Name","p (t-test)","FDR","Fold Change")
              )
    setkey(temp.table,"Human Symbol")
    if (output) {
        display.table <- temp.table[`FDR`<=fdr.cutoff,][order(`p (t-test)`),]
        if (orderbyfc) {
            display.table <- temp.table[order(-abs(`Fold Change`)),]
        }
        if (!is.na(members)) {
            members <- min(c(members,nrow(display.table)))
            display.table <- display.table[1:members,]
        }

        display.table <-
            display.table[,`Human Symbol`:=paste0("\\textit{",xtable.sanitize.text(`Human Symbol`),
                                                  "}")]
        display.table[,`Human Name`:=NULL]
        # setnames(display.table,"Human Symbol","\\multicolumn{1}{p{0.5in}}{Human Symbol}")6
        setnames(display.table,"Fold Change","$\\text{log}_2$ FC")
        print(xtable(display.table,
                     display=c("s","s","e","g","f"),
                     caption=caption,
                     label=label,
                     align=c("c","p{0.7in}","r","r","r")
                     ),
              booktabs=TRUE,
              floating=FALSE,
              caption.placement="top",
              tabular.environment=ifelse(is.na(members),"longtable","tabular"),
              math.style.exponents=TRUE,
              sanitize.text.function=genes.table.sanitize,
              size="\\small",
              include.rownames=FALSE)
        
    }
    return(invisible(temp.table[order(`p (t-test)`),]))
}
output.top.genes.table <- function(data,output=TRUE) {
    if (output) {
        table.display <- c("s","s","s","d")
        table.align <- c("c","c","p{3in}","r")
        if (any(colnames(data) %in% "SEM"))  {
            table.display <- c(table.display,"d")
            table.align <- c(table.align,"r")
        }
        if (any(colnames(data) %in% "Human Symbol"))  {
            table.align <- c("c",table.align)
            table.display <- c("s",table.display)
        }
        print(xtable(data,
                     display=table.display,
                     align=table.align
                     ),
              booktabs=TRUE,
              floating=FALSE,
              sanitize.text.function=genes.table.sanitize,
              include.rownames=FALSE)
    }
}

@ 




<<human.lineage.specific,echo=FALSE,results="asis">>=
hum.all.lin.spec <-
    placenta.lineage.specific.table("hum.all",
                                    lineage.table=human.mouse.lineage.specific.analysis,
                                    members=NA,
                                    caption=c("\\lineagetableexplanationtypeiii{\\human}{all other species}","\\human lineage specific genes"),
                                    label="tab:human_lineage_specific_all"
                                    )
setkey(hum.all.lin.spec,"Human Symbol")
@ 


\clearpage

\section{Core Placenta Transcriptome}

\begin{table}
\footnotesize
<<go.analysis,warning=FALSE,message=FALSE,echo=FALSE,results="asis",cache.extra=tools::md5sum(paste0("../data/placenta_go_results_",c("bp","mf","permissive_bp","permissive_mf")))>>=
load("../data/placenta_go_results_mf")
load("../data/placenta_go_results_bp")
load("../data/placenta_go_results_permissive_mf")
load("../data/placenta_go_results_permissive_bp")

placenta.go.results <- rbindlist(list(head(n=20,placenta_go_results_mf[classic.fdr < 0.05,]),
                             head(n=20,placenta_go_results_bp[classic.fdr < 0.05,])))
placenta.go.results <- placenta.go.results[,Annotated:=NULL]
setnames(placenta.go.results,"Significant","Core")
setnames(placenta.go.results,"classic","p value")
setnames(placenta.go.results,"classic.fdr","FDR")
setnames(placenta.go.results,"GO.ID","GO ID")
setnames(placenta.go.results,"Term","GO Term")

placenta.go.results.permissive <-
    rbindlist(list(placenta_go_results_permissive_mf,
                   placenta_go_results_permissive_bp))
setnames(placenta.go.results.permissive,"Significant","Core")
setnames(placenta.go.results.permissive,"classic","p value")
setnames(placenta.go.results.permissive,"classic.fdr","Permissive FDR")
setnames(placenta.go.results.permissive,"GO.ID","GO ID")
setnames(placenta.go.results.permissive,"Term","GO Term")
setkey(placenta.go.results,"GO ID")
setkey(placenta.go.results.permissive,"GO ID")

combined.placenta.go.results <-
    placenta.go.results.permissive[,list(`GO ID`,`Permissive FDR`)
                                   ][placenta.go.results][order(Ontology,FDR),]
combined.placenta.go.results <-
    combined.placenta.go.results[,`p value`:=as.numeric(`p value`)]
setcolorder(combined.placenta.go.results,
            c("Ontology",
              "GO ID",
              "GO Term",
              "Core",
              "Expected",
              "p value",
              "FDR",
              "Permissive FDR"))
combined.placenta.go.results <-
    combined.placenta.go.results[,`p value`:=NULL]
setnames(combined.placenta.go.results,"Ontology","Ont.")
setnames(combined.placenta.go.results,"Expected","Exp.")
print(xtable(combined.placenta.go.results,
             digits=2,
             display=c("d","s","s","s","d","f","e","e")),
      include.rownames=FALSE,
      booktabs=TRUE,
      math.style.exponents=TRUE,
      floating=FALSE
      )
@ 
\caption[Core placenta GO Enrichment]{GO terms most significantly enriched
  (\Sexpr{placenta.go.results[,sum(Ontology=="MF")]} MF,
  \Sexpr{placenta.go.results[,sum(Ontology=="BP")]} BP) in
  the core placenta transcriptome ($\text{FPKM}>10$ in 14
  of 14 species) as compared to all genes with 1:1 human orthologs in
  all species. “Ont.” is the GO Ontology, where MF is molecular function 
  and BP is biological process; “Core” is the number of genes in the core
  transcriptome for each GO term; “Exp.” is the number of genes
  expected in the core transcriptome for each term; 
  “FDR” is the false discovery rate as estimated by the
  Benjamini and Hochberg procedure \cite{Benjamini1995:bh_procedure} based on
  p values calculated by the Fisher Exact Test; 
  “Permissive FDR” is the FDR resulting from the equivalent GO
  analysis using the permissive core placenta transcriptome 
  (1:1 orthologs with expression of at least 10 FPKM at least 10 of 14 species) 
  showing that the enriched GO terms are relatively insensitive to the precise
  set of species included.}
\label{tab:core_placenta_go_terms}
\end{table}


\clearpage



\begin{figure}[tbh]
<<core.placenta.transcriptome.housekeeping,fig.width=6,fig.height=8,out.height="0.8\\textheight",echo=FALSE>>=
cptlh <-
    core.placenta.transcriptome.long[!grepl("(min|median|max|all)_expression|all_but_",
                                            Species) & housekeeping==TRUE,]
cptlh <- cptlh[,Species:=factor(gsub("^([^ ])[^ ]* +([^ ]*)","\\1. \\2",capfirst(Species)),
                              levels=gsub("^([^ ])[^ ]* +([^ ]*)","\\1. \\2",
                                          capfirst(names(species.names))))]

print(ggplot(cptlh[FPKM > 0.9,],aes(x=human_name,y=FPKM))+
      geom_boxplot(outlier.shape=NA)+
      scale_y_log10(labels=trans_format("log10", math_format(10^.x)))+
      geom_point(aes(color=Species,shape=Species))+
      scale_shape_manual("Species",
                         guide=guide_legend(#nrow=1,
                                            keywidth=unit(3,"mm"),
                                            keyheight=unit(3,"mm"),
                                            label.theme=element_text(face="italic",
                                                                     angle=0,
                                                                     size=9),
                                            title.position="top"
                                            ),
                         values=0:18)+
      # scale_color_discrete(NULL)+
      coord_flip()+
      xlab("Human Ortholog Name")+
      ylab("Gene Expression (FPKM)")+
      theme_bw() +
      theme(legend.position=c(0.7,0.15),
            axis.text.y=element_text(face="italic",size=5),
            legend.margin=unit(0,"mm"),
            legend.justification="left",
            plot.margin=unit(c(0,0,0,0),"mm")
            ))
@ 
\caption[Housekeeping genes excluded from the Core Placenta Transcriptome]{
  Housekeeping genes excluded from the Core Placenta Transcriptome.
  \Sexpr{cptlh[,length(unique(human_name))]}
  1:1 \human ortholog genes expressed ($\mathrm{FPKM} \ge 10$) in the
  placenta of all \Sexpr{star.logs[,length(unique(species))]} species
  studied which are housekeeping genes~%
  \cite{Eisenberg.ea2013:Humanhousekeepinggenesrevisited}
  ordered (from top to bottom) by median expression.}
\label{fig:core_placenta_transcriptome_housekeeping}
\end{figure}

\clearpage

<<tissue_specificity_index_vs_housekeeping,echo=FALSE,message=FALSE>>=
tissue.specificity.index <- function(expression){
    expression <- expression[!is.na(expression)]
    expression <- expression[is.finite(expression)]
    if (length(expression)==0) {
        return(0)
    }
    if (max(expression)==0) {
        return(0)
    }
    return(sum(1-expression/max(expression))/
               (length(expression)-1))
}
tissue.specific.data <- fread("zcat ../data/rna_tissue.csv.zip")
tissue.specific.markers <-
    tissue.specific.data[,list(`Gene name`,
                               "Tissue Specificity Index"=
                                   tissue.specificity.index(as.numeric(Value))
                               ),
                         by=Gene][!duplicated(Gene),]
rm(tissue.specific.data)

setkey(tissue.specific.markers,"Gene name")
core.placenta.genes <-
    core.placenta.transcriptome.long[!grepl("(min|median|max|all)_expression|all_but_",
                                            Species),
                                     list("Median FPKM"=median(FPKM),
                                          "Gene Type"=ifelse(housekeeping,
                                                             "Housekeeping","Not Housekeeping"),
                                          housekeeping=housekeeping[1]
                                          ),
                                     by=human_name]
setkey(core.placenta.genes,"human_name")
core.placenta.genes.tsi <-
    tissue.specific.markers[core.placenta.genes[!duplicated(human_name)]]
rm(tissue.specific.markers,core.placenta.genes)
@ 

\begin{figure}
<<tissue_specificity_index_vs_median_fpkm,echo=FALSE,message=FALSE>>=
grid::pushViewport(grid::viewport(layout=grid::grid.layout(ncol=2,nrow=1,widths=c(1.5,1))))
print(ggplot(core.placenta.genes.tsi,
             aes(x=`Median FPKM`,
                 y=`Tissue Specificity Index`,
                 color=ifelse(housekeeping,"Housekeeping","Not\nHousekeeping")))
      + geom_point()
      + stat_ellipse()
      + ylab("Tissue Specificity Index")
      + xlab("Median FPKM")
      + scale_x_log10(labels=trans_format("log10", math_format(10^.x)))
      + scale_color_discrete("")
      + theme(legend.position="top"),
      vp=grid::viewport(layout.pos.row=1,layout.pos.col=1)
      )
print(ggplot(core.placenta.genes.tsi,
             aes(x=ifelse(housekeeping,"Housekeeping","Not Housekeeping"),
                 y=`Tissue Specificity Index`,
                 color=ifelse(housekeeping,"Housekeeping","Not\nHousekeeping")))
      + geom_boxplot(outlier.color=NA)
      + geom_jitter()
      + ylab("Tissue Specificity Index")
      + xlab("Gene Type")
      + scale_color_discrete("")
      + theme(legend.position="top"),
      vp=grid::viewport(layout.pos.row=1,layout.pos.col=2)
      )
grid::popViewport()
grid::grid.text(c("A","B"),
                y=unit(1,"npc")-unit(0.1,"cm"),
                x=unit(c(0,1.5/2.5),"npc")+unit(0.1,"cm"),
                gp=gpar(fontsize=24),
                just=c("left","top"))

@ 
\caption[Tissue specificity index with housekeeping]{Tissue
  specificity index and housekeeping genes. In general, the set of
  housekeeping genes identified by
  \citet{Eisenberg.ea2013:Humanhousekeepinggenesrevisited} has lower
  tissue specificity
  index~\cite{Yanai.ea2005:Genome-widemidrangetranscriptionprofiles}
  than genes which are not tissue specific (calculated based on the
  Human Protein Atlas version 16.1 RNA-seq data
  \cite{Uhlén.ea2015:ProteomicsTissue-basedmapof}). Some of the genes
  with higher tissue specificity (\textit{NPC} and \textit{CISD1} have
  outlier expression in a single tissue, even though they are
  moderately expressed in every tissue.)}
\label{fig:tissue_specificity_index_with_housekeeping}
\end{figure}

\clearpage

<<tissue_specificity_index_of_placenta_core_genes,echo=FALSE,results="asis">>=
print(xtable(core.placenta.genes.tsi[order(-`Median FPKM`),
                                     list(`Gene name`,
                                          `Tissue Specificity Index`,
                                          `Median FPKM`,
                                          `Gene Type`
                                          )],
             digits=2,
             display=c("s","s","f","f","s"),
             caption=c("Tissue specificity index~\\cite{Yanai.ea2005:Genome-widemidrangetranscriptionprofiles} (calculated based on the Human Protein Atlas version 16.1 RNA-seq data \\cite{Uhlén.ea2015:ProteomicsTissue-basedmapof}) of Placenta Core Genes ordered by median expression with housekeeping status~\\cite{Eisenberg.ea2013:Humanhousekeepinggenesrevisited} indicated.",
                       "Tissue specificity of Placenta Core Genes"
                       ),
             label="tab:tissue_specificity_index_of_plaenta_core_genes"
             ),
      include.rownames=FALSE,
      booktabs=TRUE,
      math.style.exponents=TRUE,
      size="\\footnotesize",
      caption.placement="top",
      tabular.environment="longtable",
      floating=FALSE
      )
@ 
  


\begin{figure}
<<housekeeping.placenta.distribution,fig.width=5,fig.height=5,out.height="0.8\\textheight",echo=FALSE,message=FALSE>>=
## housekeeping set as apposed to non-housekeeping set
cptg.h <- core.placenta.transcriptome.genes.shape[(human_name %in% housekeeping.genes.superset[,gene_short_name])]
num.species <- star.logs.wide[,length(unique(species))]

calculate.distribution.shape <- 
    function(min.vector) {
        min.vector <- sort(min.vector,decreasing=TRUE)
        temp <- data.table(FPKM=min.vector,num_genes=1:length(min.vector))
        temp <- temp[order(-num_genes)][!duplicated(FPKM)]
        return(temp)
    }

cpt.h.distribution.shape <- 
    lapply(c("all_expression",
             "all_but_one_expression",
             "all_but_two_expression",
             "all_but_three_expression",
             "all_but_four_expression",
             "all_but_metatherian_expression"
             ),
           function(x){
               calculate.distribution.shape(cptg.h[,x,with=FALSE][[1]])[,`Minimum Expression in`:=x]
           })
fix.expression.names <- function(x){
    x <- gsub("^all_but_metatherian_expression$",
              paste0("All ",num.species-1," Eutherians"),
              x
              )
    x <- gsub("^all_expression$",
              paste0(num.species," of ",num.species," Species"),
              x
              )
    nc.levels <- c(paste0("All ",num.species-1," Eutherians"),
                   paste0(num.species," of ",num.species," Species")
                   )
    ## number coutner
    nc <- c("one"=1,"two"=2,"three"=3,"four"=4)
    for (a in names(nc)) {
        x <- gsub(paste0("^all_but_",a,"_expression$"),
              paste0(num.species-nc[a]," of ",num.species," Species"),
              x
              )
        nc.levels <-
            c(nc.levels,
              paste0(num.species-nc[a]," of ",num.species," Species"))
    }
    return(factor(x,levels=nc.levels))
}

cpt.h.distribution.shape <- 
    rbindlist(cpt.h.distribution.shape)

cpt.h.distribution.shape <- 
    cpt.h.distribution.shape[,`Min. Exp. in`:=
                                fix.expression.names(`Minimum Expression in`)]

setnames(cpt.h.distribution.shape,
         "FPKM",
         "Expression (FPKM)")

print(ggplot(cpt.h.distribution.shape[`Expression (FPKM)` > 0.1,],
             aes(x=`Expression (FPKM)`,color=`Min. Exp. in`,y=num_genes))
      + geom_line(lwd=1)
      + xlab("Minimum Expression cutoff (FPKM)")
      + ylab("Number of Genes Meeting FPKM Cutoff")
      + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
                      labels = trans_format("log10", math_format(10^.x)))
      + scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
                      labels = trans_format("log10", math_format(10^.x)))
      + geom_vline(xintercept=10,linetype="dotted")
      + geom_segment(mapping=aes(y=V1-ifelse(V1<145,40,0),
                         yend=V1,
                         xend=10,
                         x=sapply(V1,
                                  function(x){
                                      cpt.h.distribution.shape[num_genes > x,
                                                             max(`Expression (FPKM)`)*2.5]
                                  }),
                         color=`Min. Exp. in`),
                     data=cpt.h.distribution.shape[`Expression (FPKM)` > 10,
                                              max(num_genes),`Min. Exp. in`],
                     arrow=arrow(length=unit(0.5,"cm")),
                     show.legend=FALSE
                     )
      + geom_text(mapping=aes(x=sapply(V1,
                                       function(x){
                                           cpt.h.distribution.shape[num_genes > x,
                                                                  max(`Expression (FPKM)`)*2.6]
                                       }),
                      y=V1-ifelse(V1<145,40,0),
                      label=paste0(V1," genes"),override=TRUE),
                  data=cpt.h.distribution.shape[`Expression (FPKM)` > 10,
                      max(num_genes),`Min. Exp. in`],
                  show.legend=FALSE,
                  hjust=0,
                  size=8*(5/14)
                  )
      + geom_segment(mapping=aes(yend=V1,
                         y=100,
                         xend=1,
                         x=1,
                         color=`Min. Exp. in`),
                     data=cpt.h.distribution.shape[`Expression (FPKM)` > 1 &
                                                 `Min. Exp. in` == 'All 13 Eutherians',
                                                 max(num_genes),`Min. Exp. in`],
                     arrow=arrow(length=unit(0.5,"cm")),
                     show.legend=FALSE
                     )
      + geom_text(mapping=aes(x=1,
                      y=100,
                      label=paste0(V1," genes"),
                      override=TRUE),
                  angle=90,
                  data=cpt.h.distribution.shape[`Expression (FPKM)` > 1 &
                                              `Min. Exp. in` == 'All 13 Eutherians',
                                              max(num_genes),`Min. Exp. in`],
                  show.legend=FALSE,
                  hjust=1,
                  size=8*(5/14)
                  )
      + guides(color=guide_legend(title=paste0("Minimum\nExpression in"),
                                  keywidth=unit(3,"mm"),
                                  keyheight=unit(3,"mm"),
                                  title.hjust=0.5,
                                  label.position="right",
                                  label.theme=element_text(size=7,angle=0)
                                  ))
      + theme_bw()
      + theme(text=element_text(size=9),
              legend.position=c(0.99,0.99),
              legend.margin=unit(0,"mm"),
              legend.justification=c(1,1),
              plot.margin=unit(c(0,0,0,0),"mm")
              )
      )
@ 
\caption[Distribution shape of housekeeping genes in placentas]{
  Distribution shape of housekeeping genes in placentas out of
  \Sexpr{pts[,sum(expressed.housekeeping)]} \human housekeeping 
  genes which are expressed in any placenta. The vertical axis
  shows the number of 1:1 orthologous \human housekeeping genes
  expressed in 
  placenta transcriptomes if %
  \Sexpr{cpt.h.distribution.shape[,levels(`Min. Exp. in`)[1]]}
  %
  (or %
  \Sexpr{cpt.h.distribution.shape[,levels(`Min. Exp. in`)[2]]},
  % 
  etc.) have a minimum expression in FPKM equal to the horizontal axis.
  For example, if the cutoff is set to 10 (vertical black line), 
  % 
  \Sexpr{cpt.h.distribution.shape[`Expression (FPKM)` > 10 
    & `Min. Exp. in` == '14 of 14 Species',max(num_genes)]}
  %
  genes would be included if the expression of a set of 1:1 orthologs of all 14 species must be at
  least 10 FPKM, %
  \Sexpr{cpt.h.distribution.shape[`Expression (FPKM)` > 10 
    & `Min. Exp. in` == "13 of 14 Species",max(num_genes)]}
  %
  1:1 orthologs would be included if 13 of 14 species have an
   expression of at least 10 FPKM, and 
  \Sexpr{cpt.h.distribution.shape[`Expression (FPKM)` > 10 
    & `Min. Exp. in` == '10 of 14 Species',max(num_genes)]}
  genes would be included if 10 of 14 species
  must have an expression of at least 10 FPKM.}
\label{fig:core_housekeeping_transcriptome_shape}
\end{figure}

\begin{table}
<<pathway_analysis,echo=FALSE,results="asis",cache.extra=file.info(dir("../data","placenta_gsea.*",full.names=TRUE))[,"mtime"]>>=
pathway <- list()
for (database in c("kegg","reactome","biocarta","netpath")) {
    load(paste0("../data/placenta_gsea_",database))
    eval(parse(text=paste0("gsea.table <- placenta_gsea_",database)))
    gsea.table[,Database:=gsub("^(.)","\\U\\1",database,perl=TRUE)]
    pathway[[database]] <-
        gsea.table
}
pathway.analysis <-
    rbindlist(pathway)[fdr < 0.1,]
rm(pathway)
pathway.analysis[,Pathway:=gsub("^(KEGG|BIOCARTA|REACTOME) ","",
                                gsub("_+"," ",
                                     Pathway))]
pathway.analysis[,Pathway:=gsub(".+\\%","",Pathway)]

setnames(pathway.analysis,"p_values","p")
setorder(pathway.analysis,"p")
print(xtable(pathway.analysis,
             display=c("s","s","g","g","s"),
             align=c("c","p{3.5in}","r","r","c")),
      math.style.exponents=TRUE,
      include.rownames=FALSE,
      booktabs=TRUE,
      floating=FALSE)      
@ 
\caption[Core Placenta Pathway Enrichment]{Pathways with significant and suggestive enrichment
  ($\text{FDR}\le 0.1$) in the core placenta transcriptome using the
  biocarta, reactome, and kegg pathway databases}
\label{tab:core_placenta_pathway_analysis}
\end{table}


\clearpage

\section{Placenta Classification Analyses}

<<placenta_pathway_egid,echo=FALSE,results="hide">>=
load("../data/placenta_core_transcriptome_complete")
plac_path_egid <- function(column) {
    expr <- placenta.core.transcriptome.complete[!is.na(egid),eval(column)]
    names(expr) <- placenta.core.transcriptome.complete[!is.na(egid),egid]
    expr
}

plac_path_genes <- function(genes,column) {
    result <- as.numeric(NULL)
    result[!is.na(genes)] <-
        placenta.core.transcriptome.complete[na.omit(genes),eval(column)]
    names(result) <- names(genes)
    result
}

@ 

<<plot_pathway,echo=FALSE,result="hide">>=
library("KEGGgraph")
library("plotrix")
makeAttr <- function(graph, default, valNodeList) {
  tmp <- nodes(graph)
  x <- rep(default, length(tmp)); names(x) <- tmp
  
  if(!missing(valNodeList)) {
    stopifnot(is.list(valNodeList))
    allnodes <- unlist(valNodeList)
    stopifnot(all(allnodes %in% tmp))
    for(i in seq(valNodeList)) {
      x[valNodeList[[i]]] <- names(valNodeList)[i]
    }
  }
  return(x)
}
graph_attrs <- function(graph,nodecolorcolumn,cutpoint=1) {
    outs <- sapply(edges(graph), length) > 0
    ins <- sapply(inEdges(graph), length) > 0
    ios <- outs | ins
    ## translate the KEGG IDs into Gene Symbol
    ioGeneID <- translateKEGGID2GeneID(names(ios))
    nodesNames <- sapply(mget(ioGeneID, org.Hs.egSYMBOL, ifnotfound=NA), "[[",1)
    names(nodesNames) <- names(ios)
    nodevalue <- plac_path_genes(nodesNames,nodecolorcolumn)
    nodevalue.max <- max(pretty(nodevalue))
    nodevalue.na <- is.na(nodevalue)
    nodevalue[is.na(nodevalue)] <- 0
    nodecolors <- apply(colorRamp(c("gray","blue"))(nodevalue/nodevalue.max),
                        1,
                        function(x){rgb(x[1],x[2],x[3],maxColorValue=255)})
    nodecolors[nodevalue.na] <- "#FFFFFF"
    names(nodecolors) <- names(nodevalue)
    subgraph <- graph #subGraph(names(nodecolors)[nodevalue >= 0.1],
                       #  graph)
    for (node in names(nodevalue)[nodevalue < cutpoint]) {
         subgraph <- removeNode(node,subgraph)
    }
    nAttrs <- list();
    # nAttrs$fillcolor <- makeAttr(graph, "lightgrey", list(orange=names(ios)[ios]))
    nAttrs$label <- nodesNames[nodes(subgraph)]
    nAttrs$fillcolor <- nodecolors[nodes(subgraph)]
    nAttrs$fontsize <- makeAttr(subgraph,14)
    nAttrs$width <- makeAttr(subgraph,2)
    nAttrs$shape <- makeAttr(subgraph,"box")
    list(nAttrs=nAttrs,
         graph=subgraph,
         max=nodevalue.max
         )
}

plot_pathway <- function(pathway="hsa04012",pathcolor=quote(median_expression),cutpoint=1) {

    the.graph <- KEGGgraph::parseKGML2Graph(KEGGgraph::getKGMLurl(pathway))
    

    graph.attrs <- graph_attrs(the.graph,nodecolorcolumn=pathcolor,cutpoint=cutpoint)
    plot(graph.attrs$graph,"dot",
         nodeAttrs=graph.attrs$nAttrs,
         attrs=list(graph=list(rankdir="LR")))
    color.legend(100,100,200,200,c("0",as.character(graph.attrs$max)),
                 apply(colorRamp(c("gray","blue"))(seq(0,1,length.out=10)),
                       1,
                       function(x){rgb(x[1],x[2],x[3],maxColorValue=255)}))
}

@ 

\begin{figure}
<<egf_pathway,echo=FALSE,message=FALSE,fig.width=6,fig.height=6,fig.out.width="\\textwidth">>=
plot_pathway("hsa04012")
@
\caption{EGF KEGG pathway}
\label{fig:egf_kegg_pathway}
\end{figure}

<<actin_pathway,echo=FALSE,results="hide",message=FALSE>>=
library("pathview")
pathview(gene.data=plac_path_egid(quote(as.numeric(median_expression))),
         pathway.id="hsa04810",
         both.dirs=list(gene=FALSE,cpd=FALSE),
         limit=list(gene=200,cpd=29),
         high=list(gene="blue"),
         net.signature=FALSE)
@ 

\begin{figure}
  \includegraphics{hsa04810.pathview.png}
  \caption{KEGG Actin Cytoskeleton Pathway}
  \label{fig:kegg_actin}
\end{figure}


<<placenta_class_table,echo=FALSE,results="hide">>=
placenta_class_table <- function(class="shape",analysis.type="aov") {
    subtable <- placenta.classification.p[factor==class & type == analysis.type,
                                          list(gene,p,fdr)]
    setnames(subtable,c("Gene","p","FDR"))
    subtable <- head(subtable[order(p),],n=50)
    top.type <- function(gene.name) {
        placenta.classification.p[gene==gene.name & factor==class
                                  & type =="glm",][order(-abs(coefficient))][1,level]
    }
    subtable[,`level_type`:=sapply(Gene,top.type)]
    setnames(subtable,"level_type",
             paste0("Most Significant ",
                    gsub("^(.)","\\U\\1",class,perl=TRUE)))
    print(xtable(subtable,
                 align=c("c","c","r","r","c"),
                 display=c("s","s","g","g","s")
                 ),
          booktabs=TRUE,
          floating=FALSE,
          include.rownames=FALSE,
          math.style.exponents=TRUE,
          size="\\scriptsize")
}

@ 

\clearpage

\subsection{Attachment Shape}


\begin{table}[h]
<<attachment_shape_significant,echo=FALSE,results="asis">>=
placenta_class_table("shape")
@ 
\caption[Genes associated with attachment]{Top 50 genes which are associated with the shape of placenta attachment}
\label{tab:shape_genes}
\end{table}

\clearpage

\subsection{Maternal-Fetal Intimacy}

\begin{table}[h]
<<intimacy_significant,echo=FALSE,results="asis">>=
placenta_class_table("intimacy")
@ 
\caption[Genes associated with intimacy]{Top 50 genes which are associated with the degree of placenta intimacy}
\label{tab:intimacy_genes}
\end{table}

\begin{table}[h]
<<intimacy_significant_polr,echo=FALSE,results="asis">>=
placenta_class_table("intimacy",analysis.type="polr")
@ 
\caption[Intimacy genes: ordered analysis]{Top 50 genes which are associated with the degree of placenta intimacy; ordered analysis}
\label{tab:intimacy_genes_polr}
\end{table}

\clearpage
\subsection{Maternal-Fetal Interdigitation}

\begin{table}[h]
<<interdigitation_significant,echo=FALSE,results="asis">>=
placenta_class_table("interdigitation")
@ 
\caption[Genes associated with interdigitation]{Top 50 genes which are associated with the degree of maternal-fetal interdigitation}
\label{tab:interdigitation_genes}
\end{table}


\begin{table}[h]
<<interdigitation_significant_polr,echo=FALSE,results="asis">>=
placenta_class_table("interdigitation",analysis.type="polr")
@ 
\caption[Interdigitation genes: ordered analysis]{Top 50 genes which are associated with the degree of maternal-fetal interdigitation; ordered analysis}
\label{tab:interdigitation_genes_polr}
\end{table}

\clearpage


\section{GSEA}


\begin{table}
  \small
<<pathway_analysis_class,echo=FALSE,results="asis",cache.extra=file.info(dir("../data","placenta_gsea.*",full.names=TRUE))[,"mtime"]>>=
pathway <- list()
for (class in c("shape","interdigitation","intimacy")) {
    for (database in c("kegg","reactome","biocarta","netpath")) {
        load(paste0("../data/placenta_gsea_",class,"_",database))
        eval(parse(text=paste0("gsea.table <- placenta_gsea_",class,"_",database)))
        gsea.table[,Database:=gsub("^(.)","\\U\\1",database,perl=TRUE)]
        gsea.table[,Class:=gsub("^(.)","\\U\\1",class,perl=TRUE)]
        pathway[[paste0(class,"_",database)]] <-
            gsea.table
    }
}
placenta_class_gsea <-
    rbindlist(pathway)[fdr < 0.2,]
placenta_class_gsea[,Pathway:=gsub("^(KEGG|BIOCARTA|REACTOME) ","",
                                   gsub("_+"," ",
                                        Pathway))]
placenta_class_gsea[,Pathway:=gsub(".+\\%","",Pathway)]
setnames(placenta_class_gsea,"p_values","p")
setorder(placenta_class_gsea,"p")
print(xtable(placenta_class_gsea,
             display=c("s","s","g","g","s","s"),
             align=c("c","p{3in}","r","r","c","c")),
      math.style.exponents=TRUE,
      include.rownames=FALSE,
      booktabs=TRUE,
      floating=FALSE)      
@ 
\caption[Placenta Classification Pathway Enrichment]{Pathways with
  significant and suggestive enrichment ($\text{FDR}\le 0.2$) in genes
  associated with placenta morphology using the biocarta, reactome,
  and kegg pathway databases.}
\label{tab:placenta_pathway_class_analysis}
\end{table}


\clearpage



\printbibliography



\end{document}
